{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eddim\\\\Desktop\\\\Uni 2021\\\\Systems\\\\react-movies\\\\COTE-Movies\\\\src\\\\components\\\\MovieInfoComponent.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { API_KEY } from \"../App.js\";\nimport YoutubeEmbed from \"./YoutubeEmbed\";\nimport Dashboard from \"./Dashboard\";\nimport Store from \"./Store\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\ndisplay: flex;\nflex-direction: row;\npadding: 20px 30px;\njustify-content: left;\nborder-bottom: 1px solid #969696;\n`;\n_c = Container;\nconst VideoContainer = styled.div`\ndisplay: flex;\npadding: 20px 30px;\nflex-direction: column;\nheight: 100%;\nwidth: 50%;\nborder-bottom: 1px solid #969696;\n`;\n_c2 = VideoContainer;\nconst Trailer = styled.div`\ndisplay: flex;\nflex-direction: right;\nwidth: 100%;\n\n`;\n_c3 = Trailer;\nconst DashboardStyle = styled.div`\nwidth: 50%;\npadding: 10px 30px;\nbackground: #708090;\njustify-content: center;\n`;\nconst LiveChat = styled.div`\nwidth: 50%;\npadding: 10px 30px;\nbackground: #708090;\njustify-content: center;\n`;\n_c4 = LiveChat;\nconst CoverImage = styled.img`\ndisplay: flex;\nobject-fit: fill;\nheight: 452px;\nmargin-left: 10px;\nalign-items: center;\n`;\n_c5 = CoverImage;\nconst InfoColumn = styled.div`\ndisplay: flex;\nwidth: 100%;\nflex-direction: column;\nmargin: 20px;\n`;\n_c6 = InfoColumn;\nconst MovieName = styled.span`\nfont-size: 22px;\nfont-weight: 600;\ncolor: black;\nmargin: 15px 0;\nwhite-space: nowrap;\ntext-transform: capitalize;\ntext-overflow: ellipsis;\noverflow: hidden;\n& span {\n    opacity: 0.8;\n}\n`;\n_c7 = MovieName;\nconst MovieInfo = styled.span`\n\nfont-size: 16px;\nfont-weight: 500;\ncolor: black;\noverflow: hidden;\ntext-transform: capitalize;\ntext-overflow: ellipsis;\n& span {\n    opacity: 0.5;\n}\n`;\n_c8 = MovieInfo;\nconst Close = styled.span`\n  font-size: 16px;\n  font-weight: 600;\n  color: white;\n  background: black;\n  height: fit-content;\n  padding: 8px;\n  border-radius: 0%;\n  cursor: pointer;\n  opacity: 0.8;\n`;\n_c9 = Close;\nconst Desc = styled.div`\n text-transform: none;\n`;\n_c10 = Desc;\n\nconst MovieInfoComponent = props => {\n  _s();\n\n  var _movieInfo, _movieInfo2, _movieInfo3, _movieInfo4, _movieInfo5, _movieInfo6, _movieInfo7, _movieInfo8, _movieInfo9, _movieInfo10, _movieInfo11, _movieInfo12;\n\n  // NOTE: The API key is ?i instead of ?s as we are searching for a particular imdbID rather than movie Title.\n  // As shown in API documentation.\n  const {\n    selectedMovie\n  } = props; // eslint-disable-next-line no-unused-vars\n\n  console.log(selectedMovie); // As selectedMovie is receiving the ImdbID, it needs to be a prop.\n  //\n  // Get the API via selectedMovie prop's imdbID and key, then\n  // executive the response, and parse that response.data to setMovieInfo.\n\n  useEffect(() => {\n    const fetchMovieInfo = async () => {\n      // Get Request\n      await axios.get(`https://imdb-api.com/en/API/Title/${API_KEY}/${selectedMovie}`).then(response => setMovieInfo(response.data));\n    };\n\n    fetchMovieInfo();\n  }, [selectedMovie]);\n  useEffect(() => {\n    const fetchTrailerInfo = async () => {\n      // Get Request\n      await axios.get(`https://imdb-api.com/en/API/YouTubeTrailer/${API_KEY}/${selectedMovie}`).then(response => setTrailerInfo(response.data.videoId));\n    };\n\n    fetchTrailerInfo();\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: movieInfo ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(CoverImage, {\n          src: (_movieInfo = movieInfo) === null || _movieInfo === void 0 ? void 0 : _movieInfo.image,\n          alt: (_movieInfo2 = movieInfo) === null || _movieInfo2 === void 0 ? void 0 : _movieInfo2.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(InfoColumn, {\n          children: [/*#__PURE__*/_jsxDEV(MovieName, {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: (_movieInfo3 = movieInfo) === null || _movieInfo3 === void 0 ? void 0 : _movieInfo3.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 24\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MovieInfo, {\n            children: [\"Type: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: (_movieInfo4 = movieInfo) === null || _movieInfo4 === void 0 ? void 0 : _movieInfo4.type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 32\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(MovieInfo, {\n            children: [\"Director: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: (_movieInfo5 = movieInfo) === null || _movieInfo5 === void 0 ? void 0 : _movieInfo5.directors\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 36\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(MovieInfo, {\n            children: [\"IMDB Rating: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: movieInfo.imDbRating\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 39\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(MovieInfo, {\n            children: [\"Year: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: movieInfo.year\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 32\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(MovieInfo, {\n            children: [\"Released: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: movieInfo.releaseDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 36\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(MovieInfo, {\n            children: [\"Languages: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: movieInfo.languages\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(MovieInfo, {\n            children: [\"Metascore: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: movieInfo.metacriticRating\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(MovieInfo, {\n            children: [\"Rated: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: (_movieInfo6 = movieInfo) === null || _movieInfo6 === void 0 ? void 0 : _movieInfo6.contentRating\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(MovieInfo, {\n            children: [\"Runtime: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: (_movieInfo7 = movieInfo) === null || _movieInfo7 === void 0 ? void 0 : _movieInfo7.runtimeStr\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 35\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(MovieInfo, {\n            children: [\"Actors: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: (_movieInfo8 = movieInfo) === null || _movieInfo8 === void 0 ? void 0 : _movieInfo8.stars\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 34\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(MovieInfo, {\n            children: [\"Awards: \", /*#__PURE__*/_jsxDEV(Desc, {\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: (_movieInfo9 = movieInfo) === null || _movieInfo9 === void 0 ? void 0 : _movieInfo9.awards\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 40\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 34\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(MovieInfo, {\n            children: [\"Genre: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: (_movieInfo10 = movieInfo) === null || _movieInfo10 === void 0 ? void 0 : _movieInfo10.genres\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(MovieInfo, {\n            children: [\"Description: \", /*#__PURE__*/_jsxDEV(Desc, {\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: (_movieInfo11 = movieInfo) === null || _movieInfo11 === void 0 ? void 0 : _movieInfo11.plot\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 39\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Close, {\n          onClick: () => props.onMovieSelect(),\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(Trailer, {\n      children: [/*#__PURE__*/_jsxDEV(VideoContainer, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App\",\n          children: [/*#__PURE__*/_jsxDEV(MovieName, {\n            children: [(_movieInfo12 = movieInfo) === null || _movieInfo12 === void 0 ? void 0 : _movieInfo12.title, \" Trailer\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(YoutubeEmbed, {\n            embedId: trailerInfo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(LiveChat, {\n        children: [/*#__PURE__*/_jsxDEV(Store, {\n          children: /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App\",\n          children: [/*#__PURE__*/_jsxDEV(MovieName, {\n            children: \"LiveChat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true);\n};\n\n_s(MovieInfoComponent, \"3ubReDTFssvu4DHeldAg55cW/CI=\");\n\n_c11 = MovieInfoComponent;\nexport default MovieInfoComponent;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"VideoContainer\");\n$RefreshReg$(_c3, \"Trailer\");\n$RefreshReg$(_c4, \"LiveChat\");\n$RefreshReg$(_c5, \"CoverImage\");\n$RefreshReg$(_c6, \"InfoColumn\");\n$RefreshReg$(_c7, \"MovieName\");\n$RefreshReg$(_c8, \"MovieInfo\");\n$RefreshReg$(_c9, \"Close\");\n$RefreshReg$(_c10, \"Desc\");\n$RefreshReg$(_c11, \"MovieInfoComponent\");","map":{"version":3,"sources":["C:/Users/eddim/Desktop/Uni 2021/Systems/react-movies/COTE-Movies/src/components/MovieInfoComponent.js"],"names":["axios","React","useEffect","useState","styled","API_KEY","YoutubeEmbed","Dashboard","Store","Container","div","VideoContainer","Trailer","DashboardStyle","LiveChat","CoverImage","img","InfoColumn","MovieName","span","MovieInfo","Close","Desc","MovieInfoComponent","props","selectedMovie","console","log","fetchMovieInfo","get","then","response","setMovieInfo","data","fetchTrailerInfo","setTrailerInfo","videoId","movieInfo","image","title","type","directors","imDbRating","year","releaseDate","languages","metacriticRating","contentRating","runtimeStr","stars","awards","genres","plot","onMovieSelect","trailerInfo"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { API_KEY } from \"../App.js\";\r\nimport YoutubeEmbed from \"./YoutubeEmbed\";\r\nimport Dashboard from \"./Dashboard\"\r\nimport Store from \"./Store\"\r\n\r\nconst Container = styled.div`\r\ndisplay: flex;\r\nflex-direction: row;\r\npadding: 20px 30px;\r\njustify-content: left;\r\nborder-bottom: 1px solid #969696;\r\n`;\r\n\r\nconst VideoContainer = styled.div`\r\ndisplay: flex;\r\npadding: 20px 30px;\r\nflex-direction: column;\r\nheight: 100%;\r\nwidth: 50%;\r\nborder-bottom: 1px solid #969696;\r\n`;\r\n\r\nconst Trailer = styled.div`\r\ndisplay: flex;\r\nflex-direction: right;\r\nwidth: 100%;\r\n\r\n`;\r\n\r\nconst DashboardStyle = styled.div`\r\nwidth: 50%;\r\npadding: 10px 30px;\r\nbackground: #708090;\r\njustify-content: center;\r\n`;\r\n\r\nconst LiveChat = styled.div`\r\nwidth: 50%;\r\npadding: 10px 30px;\r\nbackground: #708090;\r\njustify-content: center;\r\n`;\r\n\r\n\r\nconst CoverImage = styled.img`\r\ndisplay: flex;\r\nobject-fit: fill;\r\nheight: 452px;\r\nmargin-left: 10px;\r\nalign-items: center;\r\n`;\r\n\r\nconst InfoColumn = styled.div`\r\ndisplay: flex;\r\nwidth: 100%;\r\nflex-direction: column;\r\nmargin: 20px;\r\n`;\r\n\r\nconst MovieName = styled.span`\r\nfont-size: 22px;\r\nfont-weight: 600;\r\ncolor: black;\r\nmargin: 15px 0;\r\nwhite-space: nowrap;\r\ntext-transform: capitalize;\r\ntext-overflow: ellipsis;\r\noverflow: hidden;\r\n& span {\r\n    opacity: 0.8;\r\n}\r\n`;\r\n\r\nconst MovieInfo = styled.span`\r\n\r\nfont-size: 16px;\r\nfont-weight: 500;\r\ncolor: black;\r\noverflow: hidden;\r\ntext-transform: capitalize;\r\ntext-overflow: ellipsis;\r\n& span {\r\n    opacity: 0.5;\r\n}\r\n`;\r\n\r\nconst Close = styled.span`\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  color: white;\r\n  background: black;\r\n  height: fit-content;\r\n  padding: 8px;\r\n  border-radius: 0%;\r\n  cursor: pointer;\r\n  opacity: 0.8;\r\n`;\r\n\r\nconst Desc = styled.div`\r\n text-transform: none;\r\n`;\r\n\r\n\r\n\r\nconst MovieInfoComponent = (props) => {\r\n\r\n    // NOTE: The API key is ?i instead of ?s as we are searching for a particular imdbID rather than movie Title.\r\n    // As shown in API documentation.\r\n\r\n    const { selectedMovie } = props;\r\n    // eslint-disable-next-line no-unused-vars\r\n    console.log(selectedMovie);\r\n    \r\n\r\n    // As selectedMovie is receiving the ImdbID, it needs to be a prop.\r\n    //\r\n    // Get the API via selectedMovie prop's imdbID and key, then\r\n    // executive the response, and parse that response.data to setMovieInfo.\r\n    useEffect(() => {\r\n\r\n      const fetchMovieInfo = async () => {\r\n\r\n        // Get Request\r\n      await axios.get(`https://imdb-api.com/en/API/Title/${API_KEY}/${selectedMovie}`,).then((response) =>\r\n      setMovieInfo(response.data));\r\n      \r\n      }; fetchMovieInfo() }, [selectedMovie]);\r\n\r\n      useEffect(() => {\r\n\r\n        const fetchTrailerInfo = async () => {\r\n  \r\n          // Get Request\r\n        await axios.get(`https://imdb-api.com/en/API/YouTubeTrailer/${API_KEY}/${selectedMovie}`,).then((response) =>\r\n        setTrailerInfo(response.data.videoId));\r\n          \r\n        }; fetchTrailerInfo() }, );\r\n        \r\n    return (\r\n      \r\n            <><Container>\r\n        {movieInfo ? (\r\n          <>            \r\n            \r\n            <CoverImage src={movieInfo?.image} alt={movieInfo?.title} />\r\n            <InfoColumn>\r\n            <MovieName><span>{movieInfo?.title}</span></MovieName>\r\n              <MovieInfo>Type: <span>{movieInfo?.type}</span></MovieInfo>\r\n              <MovieInfo>Director: <span>{movieInfo?.directors}</span></MovieInfo>\r\n              <MovieInfo>IMDB Rating: <span>{movieInfo.imDbRating}</span></MovieInfo>\r\n              <MovieInfo>Year: <span>{movieInfo.year}</span></MovieInfo>\r\n              <MovieInfo>Released: <span>{movieInfo.releaseDate}</span></MovieInfo>\r\n              <MovieInfo>Languages: <span>{movieInfo.languages}</span></MovieInfo>\r\n              <MovieInfo>Metascore: <span>{movieInfo.metacriticRating}</span></MovieInfo>\r\n              <MovieInfo>Rated: <span>{movieInfo?.contentRating}</span></MovieInfo>\r\n              <MovieInfo>Runtime: <span>{movieInfo?.runtimeStr}</span></MovieInfo>\r\n              <MovieInfo>Actors: <span>{movieInfo?.stars}</span></MovieInfo>\r\n              <MovieInfo>Awards: <Desc><span>{movieInfo?.awards}</span></Desc></MovieInfo>\r\n              <MovieInfo>Genre: <span>{movieInfo?.genres}</span></MovieInfo>\r\n              <MovieInfo>Description: <Desc><span>{movieInfo?.plot}</span></Desc></MovieInfo>\r\n            </InfoColumn>\r\n            \r\n            <Close onClick={() => props.onMovieSelect()}>X</Close>\r\n          </>\r\n        ) : (\r\n          \"Loading...\"\r\n        )}\r\n      </Container><Trailer>\r\n          <VideoContainer>\r\n            <div className=\"App\">\r\n              <MovieName>{movieInfo?.title} Trailer</MovieName>\r\n              <br></br>\r\n              <br></br>\r\n              <YoutubeEmbed embedId={trailerInfo} />\r\n\r\n            </div>\r\n          </VideoContainer>\r\n\r\n          <LiveChat>\r\n          <Store>\r\n            <Dashboard/>\r\n          </Store>\r\n          \r\n          \r\n            \r\n            <div className=\"App\">\r\n              <MovieName>LiveChat</MovieName>\r\n              \r\n              <br></br>\r\n              <br></br>\r\n            </div>\r\n          </LiveChat>\r\n        </Trailer></>\r\n        \r\n        )\r\n          }\r\n\r\nexport default MovieInfoComponent"]},"metadata":{},"sourceType":"module"}