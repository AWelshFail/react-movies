{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eddim\\\\Desktop\\\\Uni 2021\\\\Systems\\\\react-movies\\\\COTE-Movies\\\\src\\\\components\\\\Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/Styles';\nimport styled from \"styled-components\";\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport { borderRight } from '@mui/system';\nimport ListSubheader from '@mui/material/ListSubheader';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport Chip from '@mui/material/Chip';\nimport TextField from '@mui/material/TextField';\nimport { CTX } from './Store';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: '50px',\n    padding: theme.spacing(3, 2)\n  },\n  flex: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  topicsWindow: {\n    width: '30%',\n    height: '300px',\n    borderRight: '1px solid grey'\n  },\n  chatWindow: {\n    width: '70%',\n    height: '300px',\n    padding: '20px'\n  },\n  chatBox: {\n    width: '85%'\n  },\n  nicknameBox: {\n    width: '30%'\n  },\n  button: {\n    width: '15%'\n  }\n}));\nexport default function Dashboard() {\n  _s();\n\n  const classes = useStyles(); //CTX store\n\n  const {\n    allChats,\n    sendChatAction,\n    user\n  } = React.useContext(CTX);\n  console.log({\n    allChats\n  });\n  const topics = Object.keys(allChats); //Local State\n\n  const [textValue, changeTextValue] = React.useState('');\n  const [activeTopic, changeActiveTopic] = React.useState(topics[0]);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      minWidth: 275,\n      minHeight: 475\n    },\n    children: [/*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h2\",\n        sx: {\n          fontSize: 14\n        },\n        color: \"text.secondary\",\n        gutterBottom: true,\n        children: \"Chat App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        component: \"div\",\n        children: activeTopic\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.flex,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.flex,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.nicknameBox,\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"test\",\n              placeholder: \"Nickname\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.chatWindow,\n          children: allChats[activeTopic].map((chat, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.flex,\n            children: [/*#__PURE__*/_jsxDEV(Chip, {\n              label: chat.from\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              gutterBottom: true,\n              children: chat.msg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 33\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.flex,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Send to chat\",\n          variant: \"outlined\",\n          className: classes.chatBox,\n          value: textValue,\n          onChange: e => changeTextValue(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          className: classes.button,\n          onClick: () => {\n            sendChatAction({\n              from: user,\n              msg: textValue,\n              topic: activeTopic\n            });\n            changeTextValue('');\n          },\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), \"*/\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Dashboard, \"r+lcp+dbBeUzEjmkiJkTpDYBfcc=\", false, function () {\n  return [useStyles];\n});\n\n_c = Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["C:/Users/eddim/Desktop/Uni 2021/Systems/react-movies/COTE-Movies/src/components/Dashboard.js"],"names":["React","makeStyles","styled","Box","Card","CardActions","CardContent","Button","Typography","borderRight","ListSubheader","List","ListItem","ListItemButton","ListItemIcon","ListItemText","Chip","TextField","CTX","useStyles","theme","root","margin","padding","spacing","flex","display","alignItems","topicsWindow","width","height","chatWindow","chatBox","nicknameBox","button","Dashboard","classes","allChats","sendChatAction","user","useContext","console","log","topics","Object","keys","textValue","changeTextValue","useState","activeTopic","changeActiveTopic","minWidth","minHeight","fontSize","map","chat","i","from","msg","e","target","value","topic"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/Styles';\r\nimport styled from \"styled-components\";\r\nimport Box from '@mui/material/Box';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport { borderRight } from '@mui/system';\r\nimport ListSubheader from '@mui/material/ListSubheader';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Chip from '@mui/material/Chip';\r\nimport TextField from '@mui/material/TextField';\r\nimport { CTX } from './Store';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        margin: '50px',\r\n        padding: theme.spacing(3, 2),\r\n    },\r\n    flex: {\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    },\r\n    topicsWindow: {\r\n        width: '30%',\r\n        height: '300px',\r\n        borderRight: '1px solid grey'\r\n    },\r\n    chatWindow: {\r\n        width: '70%',\r\n        height: '300px',\r\n        padding: '20px'\r\n    },\r\n    chatBox: {\r\n        width: '85%'\r\n    },\r\n    nicknameBox: {\r\n        width: '30%'\r\n    },\r\n    button: {\r\n        width: '15%'\r\n        \r\n    }\r\n}));\r\n\r\nexport default function Dashboard(){\r\n    const classes = useStyles();\r\n    \r\n    //CTX store\r\n    const {allChats, sendChatAction, user} = React.useContext(CTX);\r\n\r\n    console.log({allChats});\r\n\r\n    const topics = Object.keys(allChats);\r\n\r\n    //Local State\r\n    const [textValue, changeTextValue] = React.useState('');\r\n    const [activeTopic, changeActiveTopic] = React.useState(topics[0]);\r\n\r\n    return(\r\n        <Card sx={{ minWidth: 275,  minHeight: 475}}>\r\n      <CardContent>\r\n        <Typography variant = \"h2\" sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\r\n          Chat App\r\n        </Typography>\r\n        <Typography variant=\"h5\" component=\"div\">\r\n          {activeTopic}\r\n        </Typography>\r\n        \r\n        <div className={classes.flex}>\r\n            {/* <div className={classes.topicsWindow}>\r\n                <List>\r\n                    {\r\n                        topics.map(topic => (\r\n                            <ListItem onClick={e => changeActiveTopic(e.target.innerText)} key={topic} button>\r\n                                <ListItemText primary={topic} />\r\n                            </ListItem>\r\n                        ))\r\n                    }\r\n                    \r\n                </List>\r\n            </div> */}\r\n            <div className={classes.flex}>\r\n                <div className={classes.nicknameBox}>\r\n                    <input type=\"test\" placeholder=\"Nickname\"/>\r\n                    \r\n                </div>\r\n            </div>\r\n            <div className={classes.chatWindow}>\r\n            \r\n                    {\r\n                        allChats[activeTopic].map((chat, i) => (\r\n                            <div className={classes.flex} key={i}>\r\n                                <Chip label={chat.from}/>\r\n                                <Typography variant='body1' gutterBottom>{chat.msg}</Typography>\r\n                            </div>\r\n                            \r\n                        ))\r\n                    }\r\n                    \r\n                \r\n            </div>\r\n        </div>\r\n        <div className={classes.flex}>\r\n            <TextField \r\n            label=\"Send to chat\" \r\n            variant=\"outlined\"\r\n            className={classes.chatBox}\r\n            value={textValue}\r\n            onChange={e => changeTextValue(e.target.value)} \r\n            />\r\n            <Button \r\n                variant='contained' \r\n                color=\"primary\" \r\n                className={classes.button}\r\n                onClick={() => {\r\n                    sendChatAction({from: user, msg: textValue, topic: activeTopic})\r\n                    changeTextValue('');\r\n                }}\r\n            >\r\n                Send\r\n            </Button>\r\n        </div>\r\n      </CardContent>\r\n      */\r\n    </Card>\r\n    )\r\n    \r\n}"]},"metadata":{},"sourceType":"module"}