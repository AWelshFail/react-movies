{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eddim\\\\Desktop\\\\Uni 2021\\\\Systems\\\\react-movies\\\\COTE-Movies\\\\src\\\\components\\\\Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useState } from \"react\";\nimport { makeStyles } from '@material-ui/core/Styles';\nimport styled from \"styled-components\";\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport { borderRight } from '@mui/system';\nimport ListSubheader from '@mui/material/ListSubheader';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport Chip from '@mui/material/Chip';\nimport TextField from '@mui/material/TextField';\nimport { CTX } from './Store';\nimport io from \"socket.io-client\";\nimport Store from \"./Store\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: '50px',\n    padding: theme.spacing(3, 2)\n  },\n  flex: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  topicsWindow: {\n    width: '30%',\n    height: '300px',\n    borderRight: '1px solid grey'\n  },\n  chatWindow: {\n    width: '70%',\n    height: '300px',\n    padding: '20px'\n  },\n  chatBox: {\n    width: '85%'\n  },\n  nicknameBox: {\n    width: '30%'\n  },\n  button: {\n    width: '15%'\n  }\n}));\n\nfunction Chat(_ref) {\n  _s();\n\n  let {\n    socket,\n    username,\n    room\n  } = _ref;\n  const [currentMessage, setCurrentMessage] = useState(\"\");\n  const [messageList, setMessageList] = useState([]);\n  const [currentRoom, setCurrentRoom] = useState(\"\");\n\n  const sendMessage = async () => {\n    if (currentMessage !== \"\") {\n      const messageData = {\n        room: room,\n        author: username,\n        message: currentMessage,\n        time: new Date(Date.now()).getHours() + \":\" + new Date(Date.now()).getMinutes()\n      };\n      setMessageList(list => [...list, messageData]);\n      await socket.emit(\"send_message\", messageData);\n    }\n  };\n\n  useEffect(() => {\n    socket.on(\"receive_message\", data => {\n      setMessageList(list => [...list, data]);\n    });\n  }, [socket]);\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      minWidth: 275,\n      minHeight: 475\n    },\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h2\",\n        sx: {\n          fontSize: 14\n        },\n        color: \"text.secondary\",\n        gutterBottom: true,\n        children: \"Chat App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        component: \"div\",\n        children: room\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.flex,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.chatWindow,\n          children: messageList.map(messageContent => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.flex,\n              children: [/*#__PURE__*/_jsxDEV(Chip, {\n                label: messageContent.author\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                gutterBottom: true,\n                children: [messageContent.message, \";\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.flex,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Send to chat\",\n          variant: \"outlined\",\n          className: classes.chatBox,\n          onChange: event => {\n            setCurrentMessage(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          className: classes.button,\n          onClick: sendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Chat, \"LOZG2rWFcHlQ74oUs3H51nnhPXs=\", false, function () {\n  return [useStyles];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["C:/Users/eddim/Desktop/Uni 2021/Systems/react-movies/COTE-Movies/src/components/Chat.js"],"names":["React","useEffect","useState","makeStyles","styled","Box","Card","CardActions","CardContent","Button","Typography","borderRight","ListSubheader","List","ListItem","ListItemButton","ListItemIcon","ListItemText","Chip","TextField","CTX","io","Store","useStyles","theme","root","margin","padding","spacing","flex","display","alignItems","topicsWindow","width","height","chatWindow","chatBox","nicknameBox","button","Chat","socket","username","room","currentMessage","setCurrentMessage","messageList","setMessageList","currentRoom","setCurrentRoom","sendMessage","messageData","author","message","time","Date","now","getHours","getMinutes","list","emit","on","data","classes","minWidth","minHeight","fontSize","map","messageContent","event","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useState } from \"react\";\r\nimport { makeStyles } from '@material-ui/core/Styles';\r\nimport styled from \"styled-components\";\r\nimport Box from '@mui/material/Box';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport { borderRight } from '@mui/system';\r\nimport ListSubheader from '@mui/material/ListSubheader';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Chip from '@mui/material/Chip';\r\nimport TextField from '@mui/material/TextField';\r\nimport { CTX } from './Store';\r\nimport io from \"socket.io-client\";\r\nimport Store from \"./Store\"\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        margin: '50px',\r\n        padding: theme.spacing(3, 2),\r\n    },\r\n    flex: {\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    },\r\n    topicsWindow: {\r\n        width: '30%',\r\n        height: '300px',\r\n        borderRight: '1px solid grey'\r\n    },\r\n    chatWindow: {\r\n        width: '70%',\r\n        height: '300px',\r\n        padding: '20px'\r\n    },\r\n    chatBox: {\r\n        width: '85%'\r\n    },\r\n    nicknameBox: {\r\n        width: '30%'\r\n    },\r\n    button: {\r\n        width: '15%'\r\n        \r\n    }\r\n}));\r\n\r\n\r\n\r\nfunction Chat({socket, username, room}){\r\n    const [currentMessage, setCurrentMessage] = useState(\"\");\r\n    const [messageList, setMessageList] = useState([]);\r\n    const [currentRoom, setCurrentRoom] = useState(\"\");\r\n    const sendMessage = async () => {\r\n        if(currentMessage !== \"\")\r\n        {\r\n            const messageData = {\r\n                room: room,\r\n                author: username,\r\n                message: currentMessage,\r\n                time: new Date(Date.now()).getHours() + \":\" + new Date(Date.now()).getMinutes()\r\n            };\r\n            setMessageList((list) => [...list, messageData]);\r\n            await socket.emit(\"send_message\", messageData)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        socket.on(\"receive_message\", (data) =>{\r\n            setMessageList((list) => [...list, data]);\r\n        })\r\n    }, [socket])\r\n\r\n    const classes = useStyles();\r\n\r\n    return(\r\n        <Card sx={{ minWidth: 275,  minHeight: 475}}>\r\n      <CardContent>\r\n        <Typography variant = \"h2\" sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\r\n          Chat App\r\n        </Typography>\r\n        <Typography variant=\"h5\" component=\"div\">\r\n          {room}\r\n        </Typography>\r\n        \r\n        <div className={classes.flex}>\r\n        \r\n            <div className={classes.chatWindow}>\r\n            {messageList.map((messageContent) => {\r\n            return(\r\n                <div className={classes.flex} >\r\n                    <Chip label={messageContent.author} />\r\n                    \r\n                    <Typography variant='body1' gutterBottom>{messageContent.message};\r\n                    </Typography>\r\n                </div>\r\n                );\r\n            })}\r\n            \r\n            </div>\r\n            \r\n        </div>\r\n        \r\n        <div className={classes.flex}>\r\n            <TextField \r\n            label=\"Send to chat\" \r\n            variant=\"outlined\"\r\n            className={classes.chatBox}\r\n            onChange={(event) => {\r\n                setCurrentMessage(event.target.value);}}\r\n            \r\n            />\r\n            <Button \r\n                variant='contained' \r\n                color=\"primary\" \r\n                className={classes.button}\r\n                onClick={sendMessage}\r\n            >\r\n                Send\r\n            </Button>\r\n        </div>\r\n        \r\n        \r\n        </CardContent>\r\n      \r\n    </Card>\r\n    )\r\n}\r\nexport default Chat"]},"metadata":{},"sourceType":"module"}