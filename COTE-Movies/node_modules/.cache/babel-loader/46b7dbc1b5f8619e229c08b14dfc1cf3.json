{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eddim\\\\Desktop\\\\Uni 2021\\\\Systems\\\\react-movies\\\\COTE-Movies\\\\src\\\\components\\\\Store.js\",\n    _s = $RefreshSig$();\n\nimport { useThemeProps } from '@mui/system';\nimport React from 'react';\nimport io from 'socket.io-client';\n/*\r\n    {\r\n        from: 'user'\r\n        msg: 'hi'\r\n        topic: 'imdb_ID'\r\n    }\r\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CTX = /*#__PURE__*/React.createContext();\nconst initState = {\n  general: [{\n    from: 'Ed',\n    msg: 'Hello'\n  }, {\n    from: 'Dave',\n    msg: 'Hello'\n  }, {\n    from: 'Smith',\n    msg: 'Hello'\n  }]\n};\n\nfunction reducer(state, action) {\n  const {\n    from,\n    msg,\n    topic\n  } = action.payload;\n\n  switch (action.type) {\n    case 'RECEIVE_MESSAGE':\n      return { ...state,\n        [topic]: [...state[topic], {\n          from,\n          msg\n        }]\n      };\n\n    default:\n      return state;\n  }\n}\n\nfunction makeRoom(selectedMovie) {\n  topics.forEach(element => {\n    array.forEach(element => {});\n  });\n}\n\nlet socket;\n\nfunction sendChatAction(value) {\n  socket.emit('chat message', value);\n}\n\nconst user = 'Ed' + Math.random(100).toFixed(2);\nexport default function Store(props) {\n  _s();\n\n  const {\n    selectMovie\n  } = props;\n  const [allChats, dispatch] = React.useReducer(reducer, initState);\n\n  if (!socket) {\n    socket = io(':3001');\n    socket.on('chat message', function (msg) {\n      console.log({\n        msg\n      });\n      dispatch({\n        type: 'RECEIVE_MESSAGE',\n        payload: msg\n      });\n    });\n  } // function Chat({ socket, username, room}){\n  //         const [currentMessage, setCurrentMessage] = useState(\"\");\n  //         const sendMessage = async () => {\n  //             if (currentMessage !== \"\"){\n  //                 const messageData = {\n  //                     room: room,\n  //                     auther: username,\n  //                     message: currentMessage,\n  //                     time: new Date(Date.now).getHours() + \":\" + new Date(Date.now).getMinutes()\n  //                 };\n  //                 await socket.emit(\"send_message\", messageData);\n  //             }\n  //         }\n\n\n  return /*#__PURE__*/_jsxDEV(CTX.Provider, {\n    value: {\n      allChats,\n      sendChatAction,\n      user\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Store, \"vrFk29yLryXB0VLT2D60PCem8hY=\");\n\n_c = Store;\n\nvar _c;\n\n$RefreshReg$(_c, \"Store\");","map":{"version":3,"sources":["C:/Users/eddim/Desktop/Uni 2021/Systems/react-movies/COTE-Movies/src/components/Store.js"],"names":["useThemeProps","React","io","CTX","createContext","initState","general","from","msg","reducer","state","action","topic","payload","type","makeRoom","selectedMovie","topics","forEach","element","array","socket","sendChatAction","value","emit","user","Math","random","toFixed","Store","props","selectMovie","allChats","dispatch","useReducer","on","console","log","children"],"mappings":";;;AAAA,SAASA,aAAT,QAA8B,aAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,kBAAf;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,OAAO,MAAMC,GAAG,gBAAGF,KAAK,CAACG,aAAN,EAAZ;AAGP,MAAMC,SAAS,GAAG;AACdC,EAAAA,OAAO,EAAC,CACJ;AAACC,IAAAA,IAAI,EAAE,IAAP;AAAaC,IAAAA,GAAG,EAAE;AAAlB,GADI,EAEJ;AAACD,IAAAA,IAAI,EAAE,MAAP;AAAeC,IAAAA,GAAG,EAAE;AAApB,GAFI,EAGJ;AAACD,IAAAA,IAAI,EAAE,OAAP;AAAgBC,IAAAA,GAAG,EAAE;AAArB,GAHI;AADM,CAAlB;;AAQA,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAA+B;AAC3B,QAAM;AAACJ,IAAAA,IAAD;AAAOC,IAAAA,GAAP;AAAYI,IAAAA;AAAZ,MAAqBD,MAAM,CAACE,OAAlC;;AAEA,UAAQF,MAAM,CAACG,IAAf;AACI,SAAK,iBAAL;AAEI,aAAM,EACF,GAAGJ,KADD;AAEF,SAACE,KAAD,GAAS,CACL,GAAGF,KAAK,CAACE,KAAD,CADH,EAEL;AACIL,UAAAA,IADJ;AAEIC,UAAAA;AAFJ,SAFK;AAFP,OAAN;;AAUJ;AACI,aAAOE,KAAP;AAdR;AAgBH;;AAED,SAASK,QAAT,CAAkBC,aAAlB,EAAgC;AAC5BC,EAAAA,MAAM,CAACC,OAAP,CAAeC,OAAO,IAAI;AACtBC,IAAAA,KAAK,CAACF,OAAN,CAAcC,OAAO,IAAI,CAExB,CAFD;AAGH,GAJD;AAKH;;AAED,IAAIE,MAAJ;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA8B;AAC1BF,EAAAA,MAAM,CAACG,IAAP,CAAY,cAAZ,EAA4BD,KAA5B;AACH;;AAED,MAAME,IAAI,GAAG,OAAOC,IAAI,CAACC,MAAL,CAAY,GAAZ,EAAiBC,OAAjB,CAAyB,CAAzB,CAApB;AAEA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAqB;AAAA;;AAChC,QAAM;AAAEC,IAAAA;AAAF,MAAkBD,KAAxB;AACA,QAAM,CAACE,QAAD,EAAWC,QAAX,IAAuBhC,KAAK,CAACiC,UAAN,CAAiBzB,OAAjB,EAA0BJ,SAA1B,CAA7B;;AAEA,MAAI,CAACgB,MAAL,EAAY;AACRA,IAAAA,MAAM,GAAGnB,EAAE,CAAC,OAAD,CAAX;AACAmB,IAAAA,MAAM,CAACc,EAAP,CAAU,cAAV,EAA0B,UAAS3B,GAAT,EAAa;AACnC4B,MAAAA,OAAO,CAACC,GAAR,CAAY;AAAC7B,QAAAA;AAAD,OAAZ;AACAyB,MAAAA,QAAQ,CAAC;AAACnB,QAAAA,IAAI,EAAC,iBAAN;AAAyBD,QAAAA,OAAO,EAAEL;AAAlC,OAAD,CAAR;AACH,KAHD;AAIH,GAV+B,CAWpC;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;AAOI,sBACI,QAAC,GAAD,CAAK,QAAL;AAAc,IAAA,KAAK,EAAE;AAACwB,MAAAA,QAAD;AAAWV,MAAAA,cAAX;AAA2BG,MAAAA;AAA3B,KAArB;AAAA,cACKK,KAAK,CAACQ;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GArCuBT,K;;KAAAA,K","sourcesContent":["import { useThemeProps } from '@mui/system';\r\nimport React from 'react';\r\nimport io from 'socket.io-client'\r\n\r\n\r\n/*\r\n    {\r\n        from: 'user'\r\n        msg: 'hi'\r\n        topic: 'imdb_ID'\r\n    }\r\n*/\r\n\r\n\r\nexport const CTX = React.createContext();\r\n\r\n\r\nconst initState = {\r\n    general:[\r\n        {from: 'Ed', msg: 'Hello'},\r\n        {from: 'Dave', msg: 'Hello'},\r\n        {from: 'Smith', msg: 'Hello'},\r\n    ]   \r\n}\r\n\r\nfunction reducer(state, action){\r\n    const {from, msg, topic} = action.payload;\r\n    \r\n    switch (action.type){\r\n        case 'RECEIVE_MESSAGE':\r\n            \r\n            return{\r\n                ...state,\r\n                [topic]: [\r\n                    ...state[topic],\r\n                    {\r\n                        from,\r\n                        msg\r\n                    }\r\n                ]\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nfunction makeRoom(selectedMovie){\r\n    topics.forEach(element => {\r\n        array.forEach(element => {\r\n            \r\n        });\r\n    });\r\n}\r\n\r\nlet socket;\r\n\r\nfunction sendChatAction(value){\r\n    socket.emit('chat message', value);\r\n}\r\n\r\nconst user = 'Ed' + Math.random(100).toFixed(2);\r\n\r\nexport default function Store(props){\r\n    const { selectMovie } = props;\r\n    const [allChats, dispatch] = React.useReducer(reducer, initState);\r\n    \r\n    if (!socket){\r\n        socket = io(':3001');\r\n        socket.on('chat message', function(msg){\r\n            console.log({msg})\r\n            dispatch({type:'RECEIVE_MESSAGE', payload: msg});\r\n        })\r\n    }\r\n// function Chat({ socket, username, room}){\r\n//         const [currentMessage, setCurrentMessage] = useState(\"\");\r\n\r\n//         const sendMessage = async () => {\r\n//             if (currentMessage !== \"\"){\r\n//                 const messageData = {\r\n//                     room: room,\r\n//                     auther: username,\r\n//                     message: currentMessage,\r\n//                     time: new Date(Date.now).getHours() + \":\" + new Date(Date.now).getMinutes()\r\n//                 };\r\n\r\n//                 await socket.emit(\"send_message\", messageData);\r\n//             }\r\n//         }\r\n    \r\n\r\n    \r\n\r\n   \r\n    \r\n    return(\r\n        <CTX.Provider value={{allChats, sendChatAction, user}}>\r\n            {props.children}\r\n        </CTX.Provider>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}