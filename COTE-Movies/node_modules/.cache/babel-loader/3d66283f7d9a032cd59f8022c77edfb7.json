{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\olive\\\\OneDrive\\\\Desktop\\\\VS Code Projects\\\\react-movies\\\\src\\\\components\\\\MovieInfoComponent.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { API_KEY } from \"../App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\ndisplay: flex;\nflex-direction: row;\npadding: 20px 30px;\njustify-content: center;\nborder-bottom: 1px solid #969696;\n`;\n_c = Container;\nconst CoverImage = styled.img`\nobject-fit: cover;\nheight: 352px;\n`;\n_c2 = CoverImage;\nconst InfoColumn = styled.div`\ndisplay: flex;\nflex-direction: column;\nmargin: 20px;\n`;\n_c3 = InfoColumn;\nconst MovieName = styled.span`\nfont-size: 22px;\nfont-weight: 600;\ncolor: black;\nmargin: 15px 0;\nwhite-space: nowrap;\ntext-transform: capitalize;\ntext-overflow: ellipsis;\noverflow: hidden;\n& span {\n    opacity: 0.8;\n}\n`;\n_c4 = MovieName;\nconst MovieInfo = styled.span`\nfont-size: 16px;\nfont-weight: 500;\ncolor: black;\noverflow: hidden;\nmargin: 4px 0;\ntext-transform: capitalize;\ntext-overflow: ellipsis;\n& span {\n    opacity: 0.5;\n}\n`;\n_c5 = MovieInfo;\nconst Close = styled.span`\n  font-size: 16px;\n  font-weight: 600;\n  color: black;\n  background: lightgray;\n  height: fit-content;\n  padding: 8px;\n  border-radius: 50%;\n  cursor: pointer;\n  opacity: 0.8;\n`;\n\nconst MovieInfoComponent = props => {\n  _s();\n\n  // NOTE: The API key is ?i instead of ?s as we are searching for a particular imdbID rather than movie Title.\n  // As shown in API documentation.\n  const {\n    selectedMovie\n  } = props;\n  const [movieInfo, setMovieInfo] = useState(); // As selectedMovie is receiving the ImdbID, it needs to be a prop.\n  //\n  // Get the API via selectedMovie prop's imdbID and key, then\n  // executive the response, and parse that response.data to setMovieInfo.\n\n  useEffect(() => {\n    axios.get(`https://www.omdbapi.com/?i=${selectedMovie}&apikey=${API_KEY}`).then(response => setMovieInfo(response.data));\n  }, [selectedMovie]); // Assign the API content to the movie prop which\n  // currently contains the type and index of search results!\n  //const { Title, Year, imdbID, Type, Poster } = props.movie;\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(CoverImage, {\n      src: movieInfo === null || movieInfo === void 0 ? void 0 : movieInfo.Poster\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(InfoColumn, {\n      children: [/*#__PURE__*/_jsxDEV(MovieName, {\n        children: [movieInfo === null || movieInfo === void 0 ? void 0 : movieInfo.Type, \": \", movieInfo === null || movieInfo === void 0 ? void 0 : movieInfo.Type]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MovieInfo, {\n        children: [\"IMDB Rating: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: movieInfo === null || movieInfo === void 0 ? void 0 : movieInfo.imdbRating\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MovieInfo, {\n        children: [\"Metascore: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: movieInfo === null || movieInfo === void 0 ? void 0 : movieInfo.Metascore\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 39\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MovieInfo, {\n        children: [\"Year \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: movieInfo === null || movieInfo === void 0 ? void 0 : movieInfo.Year\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MovieInfo, {\n        children: [\"Language: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: movieInfo === null || movieInfo === void 0 ? void 0 : movieInfo.Language\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MovieInfo, {\n        children: [\"Rated: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: movieInfo === null || movieInfo === void 0 ? void 0 : movieInfo.Rated\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MovieInfo, {\n        children: [\"Released: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: movieInfo === null || movieInfo === void 0 ? void 0 : movieInfo.Released\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MovieInfo, {\n        children: [\"Runtime: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: movieInfo === null || movieInfo === void 0 ? void 0 : movieInfo.Runtime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MovieInfo, {\n        children: [\"Director: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: movieInfo === null || movieInfo === void 0 ? void 0 : movieInfo.Director\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MovieInfo, {\n        children: [\"Actors: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: movieInfo === null || movieInfo === void 0 ? void 0 : movieInfo.Actors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 36\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MovieInfo, {\n        children: [\"Description: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: movieInfo === null || movieInfo === void 0 ? void 0 : movieInfo.Plot\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MovieInfoComponent, \"Vzx6hXogC1wFOlpv/O83R0z+ZjM=\");\n\n_c6 = MovieInfoComponent;\nexport default MovieInfoComponent;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"CoverImage\");\n$RefreshReg$(_c3, \"InfoColumn\");\n$RefreshReg$(_c4, \"MovieName\");\n$RefreshReg$(_c5, \"MovieInfo\");\n$RefreshReg$(_c6, \"MovieInfoComponent\");","map":{"version":3,"sources":["C:/Users/olive/OneDrive/Desktop/VS Code Projects/react-movies/src/components/MovieInfoComponent.js"],"names":["axios","useEffect","useState","styled","API_KEY","Container","div","CoverImage","img","InfoColumn","MovieName","span","MovieInfo","Close","MovieInfoComponent","props","selectedMovie","movieInfo","setMovieInfo","get","then","response","data","Poster","Type","imdbRating","Metascore","Year","Language","Rated","Released","Runtime","Director","Actors","Plot"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {API_KEY} from \"../App\";\r\n\r\nconst Container = styled.div`\r\ndisplay: flex;\r\nflex-direction: row;\r\npadding: 20px 30px;\r\njustify-content: center;\r\nborder-bottom: 1px solid #969696;\r\n`;\r\n\r\nconst CoverImage = styled.img`\r\nobject-fit: cover;\r\nheight: 352px;\r\n`;\r\n\r\nconst InfoColumn = styled.div`\r\ndisplay: flex;\r\nflex-direction: column;\r\nmargin: 20px;\r\n`;\r\n\r\nconst MovieName = styled.span`\r\nfont-size: 22px;\r\nfont-weight: 600;\r\ncolor: black;\r\nmargin: 15px 0;\r\nwhite-space: nowrap;\r\ntext-transform: capitalize;\r\ntext-overflow: ellipsis;\r\noverflow: hidden;\r\n& span {\r\n    opacity: 0.8;\r\n}\r\n`;\r\n\r\nconst MovieInfo = styled.span`\r\nfont-size: 16px;\r\nfont-weight: 500;\r\ncolor: black;\r\noverflow: hidden;\r\nmargin: 4px 0;\r\ntext-transform: capitalize;\r\ntext-overflow: ellipsis;\r\n& span {\r\n    opacity: 0.5;\r\n}\r\n`;\r\n\r\nconst Close = styled.span`\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  color: black;\r\n  background: lightgray;\r\n  height: fit-content;\r\n  padding: 8px;\r\n  border-radius: 50%;\r\n  cursor: pointer;\r\n  opacity: 0.8;\r\n`;\r\n\r\n\r\nconst MovieInfoComponent = (props) => {\r\n\r\n    // NOTE: The API key is ?i instead of ?s as we are searching for a particular imdbID rather than movie Title.\r\n    // As shown in API documentation.\r\n\r\n    const { selectedMovie } = props;\r\n    const [movieInfo, setMovieInfo] = useState();\r\n\r\n    // As selectedMovie is receiving the ImdbID, it needs to be a prop.\r\n    //\r\n    // Get the API via selectedMovie prop's imdbID and key, then\r\n    // executive the response, and parse that response.data to setMovieInfo.\r\n    useEffect(() => {\r\n        axios.get(`https://www.omdbapi.com/?i=${selectedMovie}&apikey=${API_KEY}`,)\r\n        .then((response) => setMovieInfo(response.data)); \r\n    }, [selectedMovie]);\r\n\r\n    // Assign the API content to the movie prop which\r\n    // currently contains the type and index of search results!\r\n    //const { Title, Year, imdbID, Type, Poster } = props.movie;\r\n\r\n    return (\r\n    <Container>\r\n        <CoverImage src={movieInfo?.Poster}/>\r\n            <InfoColumn>\r\n                <MovieName>{movieInfo?.Type}: {movieInfo?.Type}</MovieName>\r\n                <MovieInfo>IMDB Rating: <span>{movieInfo?.imdbRating}</span></MovieInfo>\r\n                <MovieInfo>Metascore: <span>{movieInfo?.Metascore}</span></MovieInfo>\r\n                <MovieInfo>Year <span>{movieInfo?.Year}</span></MovieInfo>\r\n                <MovieInfo>Language: <span>{movieInfo?.Language}</span></MovieInfo>\r\n                <MovieInfo>Rated: <span>{movieInfo?.Rated}</span></MovieInfo>\r\n                <MovieInfo>Released: <span>{movieInfo?.Released}</span></MovieInfo>\r\n                <MovieInfo>Runtime: <span>{movieInfo?.Runtime}</span></MovieInfo>\r\n                <MovieInfo>Director: <span>{movieInfo?.Director}</span></MovieInfo>\r\n                <MovieInfo>Actors: <span>{movieInfo?.Actors}</span></MovieInfo>\r\n                <MovieInfo>Description: <span>{movieInfo?.Plot}</span></MovieInfo>\r\n            </InfoColumn>\r\n        </Container>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default MovieInfoComponent;"]},"metadata":{},"sourceType":"module"}