{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pmotj\\\\Documents\\\\GitHub\\\\react-movies\\\\src\\\\components\\\\MovieInfoComponent.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { API_KEY } from \"../App\";\nimport YoutubeEmbed from \"./YoutubeEmbed\";\nimport getDetails from \"./MovieComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\ndisplay: flex;\nflex-direction: row;\npadding: 20px 30px;\njustify-content: left;\nborder-bottom: 1px solid #969696;\n`;\n_c = Container;\nconst VideoContainer = styled.div`\ndisplay: flex;\npadding: 20px 30px;\nflex-direction: column;\nheight: 100%;\nwidth: 50%;\nborder-bottom: 1px solid #969696;\n`;\n_c2 = VideoContainer;\nconst Trailer = styled.div`\ndisplay: flex;\nflex-direction: right;\nwidth: 100%;\n\n`;\n_c3 = Trailer;\nconst LiveChat = styled.div`\nwidth: 50%;\npadding: 20px 30px;\nbackground: #708090;\njustify-content: center;\n`;\n_c4 = LiveChat;\nconst CoverImage = styled.img`\nobject-fit: fill;\nheight: 352px;\nmargin-left: 10px;\n`;\n_c5 = CoverImage;\nconst InfoColumn = styled.div`\ndisplay: flex;\nwidth: 100%;\nflex-direction: column;\nmargin: 20px;\n`;\n_c6 = InfoColumn;\nconst MovieName = styled.span`\nfont-size: 22px;\nfont-weight: 600;\ncolor: black;\nmargin: 15px 0;\nwhite-space: nowrap;\ntext-transform: capitalize;\ntext-overflow: ellipsis;\noverflow: hidden;\n& span {\n    opacity: 0.8;\n}\n`;\n_c7 = MovieName;\nconst MovieInfo = styled.span`\n\nfont-size: 16px;\nfont-weight: 500;\ncolor: black;\noverflow: hidden;\ntext-transform: capitalize;\ntext-overflow: ellipsis;\n& span {\n    opacity: 0.5;\n}\n`;\n_c8 = MovieInfo;\nconst Close = styled.span`\n  font-size: 16px;\n  font-weight: 600;\n  color: white;\n  background: black;\n  height: fit-content;\n  padding: 8px;\n  border-radius: 0%;\n  cursor: pointer;\n  opacity: 0.8;\n`;\n_c9 = Close;\n\nconst MovieInfoComponent = props => {\n  _s();\n\n  // NOTE: The API key is ?i instead of ?s as we are searching for a particular imdbID rather than movie Title.\n  // As shown in API documentation.\n  const {\n    selectedMovie\n  } = props;\n  const [movieInfo, setMovieInfo] = useState(); // As selectedMovie is receiving the ImdbID, it needs to be a prop.\n  //\n  // Get the API via selectedMovie prop's imdbID and key, then\n  // executive the response, and parse that response.data to setMovieInfo.\n\n  useEffect(() => {\n    axios.get(`https://imdb-api.com/API/AdvancedSearch/${API_KEY}/?title=${selectedMovie}`) //`https://www.omdbapi.com/?i=${selectedMovie}&apikey=${API_KEY}`,)\n    .then(response => setMovieInfo(response.data));\n  }, [selectedMovie]); // Assign the API content to the movie prop which\n  // currently contains the type and index of search results!\n  //  const { id, title, description, image } = props.movie;\n\n  const {\n    id,\n    title,\n    description,\n    image\n  } = getDetails();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(CoverImage, {\n        src: image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(InfoColumn, {\n        children: [/*#__PURE__*/_jsxDEV(MovieName, {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(MovieInfo, {\n          children: [\"IMDB Rating: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: movieInfo === null || movieInfo === void 0 ? void 0 : movieInfo.imDbRating\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(MovieInfo, {\n          children: [\"Metascore: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: movieInfo === null || movieInfo === void 0 ? void 0 : movieInfo.metacriticRating\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 39\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(MovieInfo, {\n          children: [\"Year \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(MovieInfo, {\n          children: [\"Rated: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: movieInfo === null || movieInfo === void 0 ? void 0 : movieInfo.contentRating\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(MovieInfo, {\n          children: [\"Runtime: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: movieInfo === null || movieInfo === void 0 ? void 0 : movieInfo.runtimeStr\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(MovieInfo, {\n          children: [\"Actors: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: movieInfo === null || movieInfo === void 0 ? void 0 : movieInfo.stars\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 36\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(MovieInfo, {\n          children: [\"Genre: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: movieInfo === null || movieInfo === void 0 ? void 0 : movieInfo.genres\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(MovieInfo, {\n          children: [\"Description: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: movieInfo === null || movieInfo === void 0 ? void 0 : movieInfo.plot\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Close, {\n        onClick: () => props.onMovieSelect(),\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Trailer, {\n      children: [/*#__PURE__*/_jsxDEV(VideoContainer, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App\",\n          children: [/*#__PURE__*/_jsxDEV(MovieName, {\n            children: [movieInfo === null || movieInfo === void 0 ? void 0 : movieInfo.title, \" Trailer\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(YoutubeEmbed, {\n            embedId: \"Jvurpf91omw\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(LiveChat, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App\",\n          children: [/*#__PURE__*/_jsxDEV(MovieName, {\n            children: \"LiveChat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(MovieInfoComponent, \"Vzx6hXogC1wFOlpv/O83R0z+ZjM=\");\n\n_c10 = MovieInfoComponent;\nexport default MovieInfoComponent;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"VideoContainer\");\n$RefreshReg$(_c3, \"Trailer\");\n$RefreshReg$(_c4, \"LiveChat\");\n$RefreshReg$(_c5, \"CoverImage\");\n$RefreshReg$(_c6, \"InfoColumn\");\n$RefreshReg$(_c7, \"MovieName\");\n$RefreshReg$(_c8, \"MovieInfo\");\n$RefreshReg$(_c9, \"Close\");\n$RefreshReg$(_c10, \"MovieInfoComponent\");","map":{"version":3,"sources":["C:/Users/pmotj/Documents/GitHub/react-movies/src/components/MovieInfoComponent.js"],"names":["axios","useEffect","useState","styled","API_KEY","YoutubeEmbed","getDetails","Container","div","VideoContainer","Trailer","LiveChat","CoverImage","img","InfoColumn","MovieName","span","MovieInfo","Close","MovieInfoComponent","props","selectedMovie","movieInfo","setMovieInfo","get","then","response","data","id","title","description","image","imDbRating","metacriticRating","contentRating","runtimeStr","stars","genres","plot","onMovieSelect"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {API_KEY} from \"../App\";\r\nimport YoutubeEmbed from \"./YoutubeEmbed\";\r\nimport getDetails from \"./MovieComponent\"\r\n\r\nconst Container = styled.div`\r\ndisplay: flex;\r\nflex-direction: row;\r\npadding: 20px 30px;\r\njustify-content: left;\r\nborder-bottom: 1px solid #969696;\r\n`;\r\n\r\nconst VideoContainer = styled.div`\r\ndisplay: flex;\r\npadding: 20px 30px;\r\nflex-direction: column;\r\nheight: 100%;\r\nwidth: 50%;\r\nborder-bottom: 1px solid #969696;\r\n`;\r\n\r\nconst Trailer = styled.div`\r\ndisplay: flex;\r\nflex-direction: right;\r\nwidth: 100%;\r\n\r\n`;\r\n\r\nconst LiveChat = styled.div`\r\nwidth: 50%;\r\npadding: 20px 30px;\r\nbackground: #708090;\r\njustify-content: center;\r\n`;\r\n\r\nconst CoverImage = styled.img`\r\nobject-fit: fill;\r\nheight: 352px;\r\nmargin-left: 10px;\r\n`;\r\n\r\nconst InfoColumn = styled.div`\r\ndisplay: flex;\r\nwidth: 100%;\r\nflex-direction: column;\r\nmargin: 20px;\r\n`;\r\n\r\nconst MovieName = styled.span`\r\nfont-size: 22px;\r\nfont-weight: 600;\r\ncolor: black;\r\nmargin: 15px 0;\r\nwhite-space: nowrap;\r\ntext-transform: capitalize;\r\ntext-overflow: ellipsis;\r\noverflow: hidden;\r\n& span {\r\n    opacity: 0.8;\r\n}\r\n`;\r\n\r\nconst MovieInfo = styled.span`\r\n\r\nfont-size: 16px;\r\nfont-weight: 500;\r\ncolor: black;\r\noverflow: hidden;\r\ntext-transform: capitalize;\r\ntext-overflow: ellipsis;\r\n& span {\r\n    opacity: 0.5;\r\n}\r\n`;\r\n\r\nconst Close = styled.span`\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  color: white;\r\n  background: black;\r\n  height: fit-content;\r\n  padding: 8px;\r\n  border-radius: 0%;\r\n  cursor: pointer;\r\n  opacity: 0.8;\r\n`;\r\n\r\nconst MovieInfoComponent = (props) => {\r\n\r\n    // NOTE: The API key is ?i instead of ?s as we are searching for a particular imdbID rather than movie Title.\r\n    // As shown in API documentation.\r\n\r\n    const { selectedMovie } = props;\r\n    const [movieInfo, setMovieInfo] = useState();\r\n\r\n    // As selectedMovie is receiving the ImdbID, it needs to be a prop.\r\n    //\r\n    // Get the API via selectedMovie prop's imdbID and key, then\r\n    // executive the response, and parse that response.data to setMovieInfo.\r\n    useEffect(() => {\r\n        axios.get(\r\n            `https://imdb-api.com/API/AdvancedSearch/${API_KEY}/?title=${selectedMovie}`)\r\n            //`https://www.omdbapi.com/?i=${selectedMovie}&apikey=${API_KEY}`,)\r\n        .then((response) => setMovieInfo(response.data)); \r\n    }, [selectedMovie]);\r\n\r\n    // Assign the API content to the movie prop which\r\n    // currently contains the type and index of search results!\r\n\r\n  //  const { id, title, description, image } = props.movie;\r\n\r\n    const {id, title, description, image} = getDetails();\r\n\r\n    return (\r\n    <>\r\n    \r\n    \r\n    \r\n    <Container>\r\n            <CoverImage src={image} />\r\n            <InfoColumn>\r\n                <MovieName>{title}</MovieName>\r\n                <MovieInfo>IMDB Rating: <span>{movieInfo?.imDbRating}</span></MovieInfo>\r\n                <MovieInfo>Metascore: <span>{movieInfo?.metacriticRating}</span></MovieInfo>\r\n                <MovieInfo>Year <span>{description}</span></MovieInfo>\r\n                <MovieInfo>Rated: <span>{movieInfo?.contentRating}</span></MovieInfo>\r\n                <MovieInfo>Runtime: <span>{movieInfo?.runtimeStr}</span></MovieInfo>\r\n                <MovieInfo>Actors: <span>{movieInfo?.stars}</span></MovieInfo>\r\n                <MovieInfo>Genre: <span>{movieInfo?.genres}</span></MovieInfo>\r\n                <MovieInfo>Description: <span>{movieInfo?.plot}</span></MovieInfo>\r\n                \r\n               \r\n            </InfoColumn>\r\n            <Close onClick={() => props.onMovieSelect()}>\r\n                X\r\n            </Close>\r\n        </Container>\r\n\r\n            <Trailer>\r\n                <VideoContainer>\r\n                    <div className=\"App\">\r\n                    <MovieName>{movieInfo?.title} Trailer</MovieName>\r\n                    <br></br>\r\n                    <br></br>\r\n                        <YoutubeEmbed embedId=\"Jvurpf91omw\" />\r\n                        \r\n                    </div>\r\n                </VideoContainer>\r\n\r\n                <LiveChat>\r\n                <div className=\"App\">\r\n                    <MovieName>LiveChat</MovieName>\r\n                    <br></br>\r\n                    <br></br>\r\n                    </div>\r\n                </LiveChat>\r\n            </Trailer>\r\n            </>\r\n        );\r\n        \r\n};\r\n\r\n\r\n\r\nexport default MovieInfoComponent;"]},"metadata":{},"sourceType":"module"}